#################################################
# MAINTAINED BY: SHIVAM
#################################################

name: CI Pipeline - release
on:
  push: 
    branches: 
      - main
    paths-ignore: 
      - '.github/**'
      - 'README.md'
env:     
  IMAGE: pharmaco
  DOCKERHUB_USERNAME: shiva9921 

jobs:
  build:
    permissions:
      contents: read 
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9",]

    steps:
      - name: code Checkout
        uses: actions/checkout@v3
        with:
           fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: install dependencies
        run: |
          pip install pylint
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi  

      - name: Linting
        run: |
          pylint --output-format=json *.py > pylint_results.json || true
          pylint *.py | tail -n 2 >> pylint_results.json
     
      - name: Code Quality Gate Check
        id: parse_pylint
        run: |
          rating=$(tail -n 2 pylint_results.json | cut -d ":" -f 2 | cut -d "/" -f1 | cut -d "." -d ":" -f 2 | cut -d "/" -f1 | cut -d "." -f1)
          if (( $(echo "$rating < 7" ) )); then
            echo "Pylint rating is less than 7.00. Exiting pipeline." 
            exit 1
          fi

      - name: Upload Pylint results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: pylint-results
          path: pylint_results.json
               
      #STEP 3 Dockerhub login
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      #STEP 4 Build and Push
      - name: Image Build
        run: |
          docker build -t ${{env.DOCKERHUB_USERNAME}}/${{env.IMAGE}}:v1.${{github.run_number}} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{env.DOCKERHUB_USERNAME}}/${{env.IMAGE}}:v1.${{github.run_number}}'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      #STEP 6 Push
      - name: Image push
        run: |
          docker push ${{env.DOCKERHUB_USERNAME}}/${{env.IMAGE}}:v1.${{github.run_number}} 
     
      - name: kuberntest manifest
        run: |
          sed -i 's/v1.12/v1.${{github.run_number}}/g' ${{ github.workspace }}/kubernets/deployment.yaml
          

   
     
